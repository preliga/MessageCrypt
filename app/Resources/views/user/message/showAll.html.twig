{% extends 'user/menu.html.twig' %}

{% block content %}

    <h2 class="page-header">Message</h2>

    <div class="tabBox">

        <ul class="nav nav-tabs">
            <li class="active"><a href="#tabMessages">Messages</a></li>
            <li><a href="#tabCryptFunction">Crypt function</a></li>
            <li><a href="#tabDecryptFunction">Decrypt function</a></li>
        </ul>

        <div class="tab-content">
            <div id="tabMessages">
                <br>
                <form action="{{  path('user_message_sendMessage', {'friendId': friendId}) }}" method="POST">
                    <div class="form-group messageBox">
                        <textarea class="form-control" placeholder="Message" name='textMessage' rows="5"></textarea>
                        <br>
                        <button class="btn btn-info sendMessage">Send</button>
                    </div>
                </form>
                <div class="panel-body-scroll">
                    <ul class="chat">
                        {% for msg in messages %}
                            <div class="{% if msg.userid1.id == friendId %} chat-div-left {% else %} chat-div-right {% endif %}">
                                <li class="{% if msg.userid1.id == friendId %} left {% else %} right {% endif %} clearfix">
                                    <span class="chat-img {% if msg.userid1.id == friendId %} pull-left {% else %} pull-right {% endif %}">
                                        {% if msg.userid1.avatar %}
                                            <img src="{{ asset('uploads/avatars/' ~ msg.userid1.avatar) }}" class="avatarMsg img-circle">
                                        {% else %}
                                            <img src='/images/empty.png' class="avatarMsg img-circle">
                                        {% endif %}
                                    </span>
                                    <div class="chat-body clearfix">
                                        <div class="header">
                                            {% if msg.userid1.id == friendId %}
                                                <small class="pull-right text-muted">
                                                    <span class="glyphicon glyphicon-time"></span>
                                                    {{ msg.date | date("Y-m-d H:i:s") }}
                                                </small>
                                                <strong class="primary-font">
                                                    <a href="{{ path("user_profile_profile", {'id': msg.userid1.id}) }}">
                                                        {{ msg.userid1.name }}
                                                        {{ msg.userid1.lastname }}
                                                    </a>
                                                </strong>
                                            {% else %}
                                                <strong class="primary-font">
                                                    <a href="{{ path("user_profile_profile", {'id': msg.userid1.id}) }}">
                                                        {{ msg.userid1.name }}
                                                        {{ msg.userid1.lastname }}
                                                    </a>
                                                </strong>
                                                <small class="pull-left text-muted">
                                                    <span class="glyphicon glyphicon-time"></span>
                                                    {{ msg.date | date("Y-m-d H:i:s") }}
                                                </small>
                                            {% endif %}
                                        </div>
                                        <p id="textMessage_{{ msg.id }}">{{ msg.text }}</p>
                                        <p id="decryptTextMessage_{{ msg.id }}" style="display: none;"></p>
                                    </div>
                                    <button class="btn btn-default decryptMessage" textMessageId="{{ msg.id }}" id="decryptMessage_{{ msg.id }}" >Decrypt</button>
                                    <button class="btn btn-default cryptMessage" textMessageId="{{ msg.id }}" id="backMessage_{{ msg.id }}" style="display: none;">Back</button>
                                </li>

                            </div>
                        {% endfor %}
                    </ul>
                </div>
            </div>
            <div id="tabCryptFunction" class="tab-pane tab" type="crypt">
                <br>
                <div class="form-group messageBox">
                    <textarea id='cryptTestMessage' class="form-control" placeholder="Test Message"  rows="5"></textarea>
                    <br>
                    <button class="btn btn-success test form-control">TEST</button>
                    <br>
                    <input id='cryptKey' class="form-control" placeholder="Key" type="text" style="width: 80%; float: left;"/>
                    <button class="btn btn-info createHash form-control" style="width: 20%;"> Hash </button>
                    <br>

                    <select id='cryptFunctions' class="form-control" style="width: 40%; float: left;">
                        <option value="-1">Choose function</option>
                    </select>
                    <button class="btn btn-warning form-control loadFunctionToEditor" style="width: 20%; float: left;">Load</button>
                    <button class="btn btn-primary form-control saveOpenWindow" style="width: 20%; float: left;">Save</button>
                    <button class="btn btn-danger form-control clearFunctionsOpenWindow" style="width: 20%; float: left;">Clear all Functions</button>
                    <br>
                    <div id="cryptUpdateDiv" hidden>
                        <input id='cryptNameFunction' class="form-control" placeholder="Function`s name" type="text" style="width: 50%; float: left;"/>
                        <button class="btn btn-danger form-control removeFunction" style="width: 25%; float: left;"> Remove </button>
                        <button class="btn btn-success form-control updateFunction" style="width: 25%; float: left;"> Update </button>
                    </div>
                </div>
                function (plainText, key) <br>
                { <br>
                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; var cipherText = plainText; <br>
                <div id="cryptEditor"></div>
                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return cipherText;
                <br>
                }
            </div>
            <div id="tabDecryptFunction" class="tab-pane tab" type="decrypt">
                <br>
                <div class="form-group messageBox">
                    <textarea id='decryptTestMessage' class="form-control" placeholder="Test Message"  rows="5"></textarea>
                    <br>
                    <button class="btn btn-success test form-control">TEST</button>
                    <br>
                    <input id='decryptKey' class="form-control" placeholder="Key" type="text" style="width: 80%; float: left;"/>
                    <button class="btn btn-info createHash" style="width: 20%"> Hash </button>
                    <br>

                    <select id='decryptFunctions' class="form-control" style="width: 40%; float: left;">
                        <option value="-1">Choose function</option>
                    </select>
                    <button class="btn btn-warning form-control loadFunctionToEditor" style="width: 20%; float: left;">Load</button>
                    <button class="btn btn-primary form-control saveOpenWindow" style="width: 20%; float: left;">Save</button>
                    <button class="btn btn-danger form-control clearFunctionsOpenWindow" style="width: 20%; float: left;">Clear all Functions</button>
                    <br>
                    <div id="decryptUpdateDiv" hidden>
                        <input id='decryptNameFunction' class="form-control" placeholder="Function`s name" type="text" style="width: 50%; float: left;"/>
                        <button class="btn btn-danger form-control removeFunction" style="width: 25%; float: left;"> Remove </button>
                        <button class="btn btn-success form-control updateFunction" style="width: 25%; float: left;"> Update </button>
                    </div>
                </div>
                function (cipherText, key) <br>
                { <br>
                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; var plainText = cipherText;
                <div id="decryptEditor"></div>
                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return plainText;
                <br>
                }
            </div>
        </div>

    </div>


{% endblock %}

{% block pagescripts %}
    <script>
        $(function(){
            /**
             * AuiEditor init
             */
            AuiEditorInit('cryptEditor');
            AuiEditorInit('decryptEditor');

            loadFunctions("-1", "crypt");
            loadFunctions("-1", "decrypt");
        });

        function createHash(id)
        {
            var keyElement = $('#' + id + "Key");
            var key = keyElement.val();

            var hex = '';
            for(var i=0;i<key.length;i++) {
                hex += ''+key.charCodeAt(i).toString(16).toUpperCase();
            }
            keyElement.val(hex);
        }

        function loadFunctions(id, type)
        {
            var html = "<option value='-1'>Choose function</option>";

            if( typeof localStorage.getItem(type+'Functions') !== 'undefined' && localStorage.getItem(type+'Functions') !== null )
            {
                var functions = JSON.parse(localStorage.getItem(type+'Functions'));

                functions.forEach(function(item, key){

                    var selected = "";
                    if(id == item['id'] )
                    {
                        selected = "selected";
                    }

                    html += "<option "+ selected +" value='"+item['id']+"'> "+ item['name'] +"</option>";
                });
            }

            $("#" + type + "Functions").html(html);
        }

        function saveFunction(type)
        {
            var functions;
            if( typeof localStorage.getItem(type+'Functions') === 'undefined' || localStorage.getItem(type+'Functions') === null ) {
                functions = [];
            } else {
                functions = JSON.parse(localStorage.getItem(type+'Functions'));
            }

            var id = Math.floor((1 + Math.random()) * 0x10000);

            var name = $('#'+type+'FunctionName').val();

            functions.push({'id':id, 'name': name, 'function': $("#" + type + "EditorTextarea").val()});

            localStorage.setItem(type+'Functions', JSON.stringify(functions));

            loadFunctions(id, type);
            $("#"+type+"NameFunction").val(name);
            $("#"+type+"UpdateDiv").show();
        }

        function loadFunctionToEditor(type)
        {
            var id = $("#"+type+"Functions").val();

            var functionStr = "";
            var name = "";

            if(id !== "-1")
            {
                if( typeof localStorage.getItem(type+'Functions') !== 'undefined' && localStorage.getItem(type+'Functions') !== null )
                {
                    var functions = JSON.parse(localStorage.getItem(type+'Functions'));


                    functions.forEach(function(item, key){

                        if(item['id'] == id) {
                            functionStr = item['function'];
                            name = item['name'];
                            return;
                        }
                    });
                }
            }

            $('#'+type+'EditorTextarea').val(functionStr);
            $('#'+type+'EditorTextarea').change();

            if(name !== "") {
                $("#"+type+"NameFunction").val(name);
                $("#"+type+"UpdateDiv").show();
            } else {
                $("#"+type+"UpdateDiv").hide();
            }
        }

        function removeFunction(type)
        {
            if( typeof localStorage.getItem(type+'Functions') !== 'undefined' && localStorage.getItem(type+'Functions') !== null ) {
                var functions = JSON.parse(localStorage.getItem(type+'Functions'));

                var id = $("#"+type+"Functions").val();

                functions.forEach(function(item, key){

                    if(item['id'] == id) {
                        functions.splice(key,1);
                        return;
                    }
                });

                localStorage.setItem(type+'Functions', JSON.stringify(functions));

                loadFunctions("-1", type);

                $('#'+type+'EditorTextarea').val("");
                $('#'+type+'EditorTextarea').change();
                $("#"+type+"UpdateDiv").hide();

            }
        }

        function updateFunction(type)
        {
            if( typeof localStorage.getItem(type+'Functions') !== 'undefined' && localStorage.getItem(type+'Functions') !== null ) {
                var functions = JSON.parse(localStorage.getItem(type+'Functions'));

                var id = $("#"+type+"Functions").val();
                var name = $('#'+type+'NameFunction').val();
                var functionStr = $('#'+type+'EditorTextarea').val();

                functions.forEach(function(item, key){

                    if(item['id'] == id) {
                        item['name'] = name;
                        item['function'] = functionStr;
                        return;
                    }
                });

                localStorage.setItem(type+'Functions', JSON.stringify(functions));
                loadFunctions(id, type);
            }

        }

        function clearAllFunctionsOpenWindow(type)
        {
            var body = "" +
                "    <div class='form-group'>\n" +
                "       <p>Do you want clear all "+type+" functions?</p>\n"+
                "       <button class='btn btn-danger form-control "+type+"ClearFunctions'>Clear</button>\n" +
                "       <button class='btn btn-default form-control "+type+"CancelFunctions'>Cancel</button>\n" +
                "    </div>\n" +
                "";

            var events = function(modal){
                $("."+type+"CancelFunctions").on('click', function () {
                    modal.destroy();
                });

                $("."+type+"ClearFunctions").on('click', function () {
                    localStorage.removeItem(type+'Functions');
                    loadFunctions("-1", type);
                    modal.destroy();
                });
            };

            AuiModalInit(body, "<h3>Clear "+type+" functions</h3>", type+"ModalClearFunctions",events);
        }

        function saveOpenWindow(type)
        {
            var body = "" +
                "    <div class='form-group'>\n" +
                "       <input class='form-control' type='text' id='"+type+"FunctionName' placeholder='Function`s name'/>\n" +
                "       <button class='btn btn-primary form-control "+type+"Save'>Save</button>\n" +
                "    </div>\n" +
                "";

            var events = function(modal){
                $("."+type+"Save").on('click', function () {
                    saveFunction(type);
                    modal.destroy();
                });
            };

            AuiModalInit(body, "<h3>Save function</h3>", type+"Modal",events);
        }


        function testFunction(type)
        {

            if(type === 'crypt')
            {
                var functionStr = createCryptFunction();
                var textVariable = 'plainText';
                var header = '<h3>CipherText</h3>';
            }
            else if (type === 'decrypt')
            {
                var functionStr = createDecryptFunction();
                var textVariable = 'cipherText';
                var header = '<h3>PlainText</h3>';
            }

            var text = $('#'+type+'TestMessage').val();
            var key = $('#'+type+'Key').val();

            try {
                var fun = new Function(textVariable,'key',functionStr);
                var newText = fun(text,key);

                createAlert(newText,header);
            }catch (e){
                var annotations =  $('#'+type+'EditorAnnotations').val();
                createAlert("<p>"+annotations+"</p>", '<h3>Syntax exception</h3>');
            }
        }

        $(".sendMessage").on('click', function () {

            var functionStr = createCryptFunction();
            var plainText = $('[name="textMessage"]').val();
            var key = $('#cryptKey').val();

            try {
                var cryptFunction = new Function('plainText','key',functionStr);
                var cipherText = cryptFunction(plainText,key);

                $('[name="textMessage"]').val(cipherText);
            }catch (e){
                var annotations =  $('#cryptEditorAnnotations').val();
                createAlert("<p>"+annotations+"</p>", '<h3>Syntax exception</h3>');
                return false;
            }
        });

        $(".decryptMessage").on('click', function() {
            var functionStr = createDecryptFunction();
            var id = $(this).attr('textMessageId');
            var cipherText = $('#textMessage_'+id).html();
            var key = $('#decryptKey').val();

            try {
                var decryptFunction = new Function('cipherText','key',functionStr);
                plainText = decryptFunction(cipherText,key);

                $('#textMessage_'+id).hide();
                $('#decryptTextMessage_'+id).html(plainText).show();
//                console.log(plainText);
                $(this).hide();
                $("#backMessage_"+id).show();
            }catch (e){
                var annotations =  $('#decryptEditorAnnotations').val();
                createAlert("<p>"+annotations+"</p>", '<h3>Syntax exception</h3>');
                return false;
            }
        });

        $(".cryptMessage").on('click', function() {
            var id = $(this).attr('textMessageId');
            $('#decryptTextMessage_'+id).html("").hide();
            $('#textMessage_'+id).show();
            $(this).hide();
            $("#decryptMessage_"+id).show();
        });

        $(".loadFunctionToEditor").on('click', function () {
            var type = $(this).parents('.tab').attr('type');
            loadFunctionToEditor(type);
        });

        $(".removeFunction").on('click', function () {
            var type = $(this).parents('.tab').attr('type');
            removeFunction(type);
        });

        $(".updateFunction").on('click', function () {
            var type = $(this).parents('.tab').attr('type');
            updateFunction(type);
        });

        $(".clearFunctionsOpenWindow").on('click', function () {
            var type = $(this).parents('.tab').attr('type');
            clearAllFunctionsOpenWindow(type);
        });

        $(".saveOpenWindow").on('click', function () {
            var type = $(this).parents('.tab').attr('type');
            saveOpenWindow(type);
        });

        $(".test").on('click', function () {
            var type = $(this).parents('.tab').attr('type');
            testFunction(type);
        });

        $(".createHash").on('click', function () {
            var type = $(this).parents('.tab').attr('type');
            createHash(type);
        });


        function createCryptFunction()
        {
            return "var cipherText = plainText; " + $('#cryptEditorTextarea').val() + "return cipherText;";
        }

        function createDecryptFunction()
        {
            return "var plainText = cipherText; " + $('#decryptEditorTextarea').val() + "return plainText;";
        }
    </script>
{% endblock %}