{% extends 'user/menu.html.twig' %}

{% block content %}

    <h2 class="page-header">Message</h2>

    <div class="tabBox">

        <ul class="nav nav-tabs">
            <li class="active"><a href="#tabMessages">Messages</a></li>
            <li><a href="#tabCryptFunction">Crypt function</a></li>
            <li><a href="#tabDecryptFunction">Decrypt function</a></li>
        </ul>

        <div class="tab-content">
            <div id="tabMessages">
                <br>
                <form action="{{  path('user_message_sendMessage', {'friendId': friendId}) }}" method="POST">
                    <div class="form-group messageBox">
                        <textarea class="form-control" placeholder="Message" name='textMessage' rows="5"></textarea>
                        <br>
                        <button class="btn btn-info sendMessage">Send</button>
                    </div>
                </form>
                <div class="panel-body-scroll">
                    <ul class="chat">
                        {% for msg in messages %}
                            <div class="{% if msg.userid1.id == friendId %} chat-div-left {% else %} chat-div-right {% endif %}">
                                <li class="{% if msg.userid1.id == friendId %} left {% else %} right {% endif %} clearfix">
                                    <span class="chat-img {% if msg.userid1.id == friendId %} pull-left {% else %} pull-right {% endif %}">
                                        {% if msg.userid1.avatar %}
                                            <img src="{{ asset('uploads/avatars/' ~ msg.userid1.avatar) }}" class="avatarMsg img-circle">
                                        {% else %}
                                            <img src='/images/empty.png' class="avatarMsg img-circle">
                                        {% endif %}
                                    </span>
                                    <div class="chat-body clearfix">
                                        <div class="header">
                                            {% if msg.userid1.id == friendId %}
                                                <small class="pull-right text-muted">
                                                    <span class="glyphicon glyphicon-time"></span>
                                                    {{ msg.date | date("Y-m-d H:i:s") }}
                                                </small>
                                                <strong class="primary-font">
                                                    <a href="{{ path("user_profile_profile", {'id': msg.userid1.id}) }}">
                                                        {{ msg.userid1.name }}
                                                        {{ msg.userid1.lastname }}
                                                    </a>
                                                </strong>
                                            {% else %}
                                                <strong class="primary-font">
                                                    <a href="{{ path("user_profile_profile", {'id': msg.userid1.id}) }}">
                                                        {{ msg.userid1.name }}
                                                        {{ msg.userid1.lastname }}
                                                    </a>
                                                </strong>
                                                <small class="pull-left text-muted">
                                                    <span class="glyphicon glyphicon-time"></span>
                                                    {{ msg.date | date("Y-m-d H:i:s") }}
                                                </small>
                                            {% endif %}
                                        </div>
                                        <p>
                                            {{ msg.text }}
                                        </p>
                                    </div>
                                </li>
                            </div>
                        {% endfor %}
                    </ul>
                </div>
            </div>
            <div id="tabCryptFunction" class="tab-pane">
                <br>
                <div class="form-group messageBox">
                    <textarea id='testMessageCrypt' class="form-control" placeholder="Test Message"  rows="5"></textarea>
                    <br>
                    <button class="btn btn-success testCrypt" style="margin-bottom: 5px;">TEST</button>
                    <br>
                    <input id='keyCrypt' class="form-control" placeholder="Key" type="text" style="width: 80%; float: left;"/>
                    <button class="btn btn-info createHashCrypt" style="width: 20%"> Hash </button>
                    <br>
                </div>
                function (plainText, key) <br>
                { <br>
                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; var cipherText = plainText;
                <div id="cryptEditor"></div>
                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return cipherText;
                <br>
                }
            </div>
            <div id="tabDecryptFunction" class="tab-pane">
                <br>
                <div class="form-group messageBox">
                    <textarea id='testMessageDecrypt' class="form-control" placeholder="Test Message"  rows="5"></textarea>
                    <br>
                    <button class="btn btn-success testDecrypt" style="margin-bottom: 5px;">TEST</button>
                    <br>
                    <input id='keyDecrypt' class="form-control" placeholder="Key" type="text" style="width: 80%; float: left;"/>
                    <button class="btn btn-info createHashDecrypt" style="width: 20%"> Hash </button>
                    <br>
                </div>
                function (cipherText, key) <br>
                { <br>
                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; var plainText = cipherText;
                <div id="decryptEditor"></div>
                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return plainText;
                <br>
                }
            </div>
        </div>

    </div>


{% endblock %}

{% block pagescripts %}
    <script>
        $(function(){
            /**
             * AuiEditor init
             */
            AuiEditorInit('cryptEditor');
            AuiEditorInit('decryptEditor');
        });


        $(".testCrypt").on('click', function () {
            var functionStr = createCryptFunction();
            var plainText = $('#testMessageCrypt').val();
            var key = $('#keyCrypt').val();

            try {
                var cryptFunction = new Function('plainText','key',functionStr);
                var cipherText = cryptFunction(plainText,key);

                createAlert(cipherText,'CipherText');
            }catch (e){
                var annotations =  $('#cryptEditorAnnotations').val();
                createAlert("<p>"+annotations+"</p>", '<h3>Syntax exception</h3>');
            }
        });

        $(".testDecrypt").on('click', function () {
            var functionStr = createDecryptFunction();

            console.log(functionStr);
            var cipherText = $('#testMessageDecrypt').val();
            var key = $('#keyDecrypt').val();

            try {
                var decryptFunction = new Function('cipherText','key',functionStr);
                var plainText = decryptFunction(cipherText,key);
                alert(plainText);
                createAlert(plainText,'PlainText');
            }catch (e){
                var annotations =  $('#decryptEditorAnnotations').val();
                createAlert("<p>"+annotations+"</p>", '<h3>Syntax exception</h3>');
            }
        });

        $(".sendMessage").on('click', function () {

            var functionStr = createCryptFunction();
            var plainText = $('[name="textMessage"]').val();
            var key = $('#keyCrypt').val();

            try {
                var cryptFunction = new Function('plainText','key',functionStr);
                var cipherText = cryptFunction(plainText,key);

                $('[name="textMessage"]').val(cipherText);
//                createAlert(cipherText,'CipherText');
            }catch (e){
                var annotations =  $('#cryptEditorAnnotations').val();
                createAlert("<p>"+annotations+"</p>", '<h3>Syntax exception</h3>');
                return false;
            }
        });

        $(".createHashCrypt").on('click', function () {
            createHash('keyCrypt');
        });

        $(".createHashDecrypt").on('click', function () {
            createHash('keyDecrypt');
        });

        function createHash(id)
        {
            var keyElement = $('#' + id);
            var key = keyElement.val();

            var hex = '';
            for(var i=0;i<key.length;i++) {
                hex += ''+key.charCodeAt(i).toString(16).toUpperCase();
            }
            keyElement.val(hex);
        }

        function createCryptFunction() {
            return "var cipherText = plainText; " + $('#cryptEditorTextarea').val() + "return cipherText;";
        }
        
        function createDecryptFunction(){
            return "var plainText = cipherText; " + $('#decryptEditorTextarea').val() + "return plainText;";
        }
    </script>
{% endblock %}